import type { CoreTextureManager } from '../CoreTextureManager.js';
import { Texture, TextureType, type TextureData } from './Texture.js';
/**
 * Properties of the {@link RenderTexture}
 */
export interface RenderTextureProps {
    /**
     * WebGL Texture width
     * @default 256
     */
    width?: number;
    /**
     * WebGL Texture height
     * @default 256
     */
    height?: number;
}
export declare class RenderTexture extends Texture {
    props: Required<RenderTextureProps>;
    type: TextureType;
    constructor(txManager: CoreTextureManager, props?: RenderTextureProps);
    get width(): number;
    set width(value: number);
    get height(): number;
    set height(value: number);
    getTextureData(): Promise<TextureData>;
    static resolveDefaults(props: RenderTextureProps): Required<RenderTextureProps>;
    static z$__type__Props: RenderTextureProps;
}
