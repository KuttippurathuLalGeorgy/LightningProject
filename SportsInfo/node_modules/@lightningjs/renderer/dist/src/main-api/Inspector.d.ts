import { CoreNode, type CoreNodeAnimateProps, type CoreNodeProps } from '../core/CoreNode.js';
import { type RendererMainSettings } from './Renderer.js';
import type { AnimationSettings } from '../core/animations/CoreAnimation.js';
import type { CoreTextNode, CoreTextNodeProps } from '../core/CoreTextNode.js';
export declare class Inspector {
    private root;
    private canvas;
    private height;
    private width;
    private scaleX;
    private scaleY;
    constructor(canvas: HTMLCanvasElement, settings: RendererMainSettings);
    setRootPosition(): void;
    createDiv(id: number, properties: CoreNodeProps | CoreTextNodeProps): HTMLElement;
    createNode(node: CoreNode): CoreNode;
    createTextNode(node: CoreNode): CoreTextNode;
    createProxy(node: CoreNode | CoreTextNode, div: HTMLElement): CoreNode | CoreTextNode;
    destroyNode(id: number): void;
    updateNodeProperty(div: HTMLElement, property: keyof CoreNodeProps | keyof CoreTextNodeProps, value: any, props: CoreNodeProps | CoreTextNodeProps): void;
    animateNode(div: HTMLElement, props: CoreNodeAnimateProps, settings: AnimationSettings): void;
}
