import type { BaseShaderController } from '../../../main-api/ShaderController.js';
import type { CoreNode } from '../../CoreNode.js';
import type { CoreShaderManager } from '../../CoreShaderManager.js';
import type { Texture } from '../../textures/Texture.js';
import type { CoreContextTexture } from '../CoreContextTexture.js';
import { CoreRenderer, type CoreRendererOptions, type QuadOptions } from '../CoreRenderer.js';
export declare class CanvasCoreRenderer extends CoreRenderer {
    private context;
    private canvas;
    private pixelRatio;
    private clearColor;
    renderToTextureActive: boolean;
    activeRttNode: CoreNode | null;
    private defShaderCtr;
    constructor(options: CoreRendererOptions);
    reset(): void;
    render(): void;
    addQuad(quad: QuadOptions): void;
    createCtxTexture(textureSource: Texture): CoreContextTexture;
    getShaderManager(): CoreShaderManager;
    getDefShaderCtr(): BaseShaderController;
    renderRTTNodes(): void;
    removeRTTNode(node: CoreNode): void;
    renderToTexture(node: CoreNode): void;
    getBufferInfo(): null;
}
